<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Jobs - Lance</title>
    
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    fontFamily: {
                        sans: ['Inter', 'sans-serif'],
                    },
                    colors: {
                        primary: {
                            50: '#f0f9ff',
                            100: '#e0f2fe',
                            500: '#0ea5e9',
                            600: '#0284c7',
                        }
                    }
                }
            }
        }
    </script>

    <style>
        .glass-effect {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
        }
    </style>
</head>
<body class="min-h-screen bg-gradient-to-br from-gray-50 to-primary-50 font-sans">
    <section class="flex h-screen overflow-hidden">
        <!-- Sidebar (same as dashboard) -->
        <section id="sidebar" class="fixed inset-y-0 left-0 transform -translate-x-full md:translate-x-0 transition duration-200 ease-in-out z-30 w-64 bg-white shadow-lg">
            <section class="flex flex-col h-full">
                <!-- Logo Section -->
                <section class="p-6 border-b">
                    <section class="flex items-center space-x-3">
                        <section class="h-10 w-10 bg-primary-500 rounded-lg flex items-center justify-center">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                            </svg>
                        </section>
                        <span class="text-xl font-bold">Lance</span>
                    </section>
                </section>

                <!-- Navigation Links -->
                <nav class="flex-1 p-4 space-y-2">
                    <a href="/dashboard/freelancer" class="flex items-center space-x-3 px-4 py-3 rounded-lg text-gray-600 hover:bg-gray-50 transition duration-150">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
                        </svg>
                        <span>Home</span>
                    </a>

                    <a href="/dashboard/freelancer/" class="flex items-center space-x-3 px-4 py-3 rounded-lg bg-primary-50 text-primary-600">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2 2v2m4 6h.01M5 20h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                        </svg>
                        <span>Jobs</span>
                    </a>

                    <a href="/dashboard/freelancer/profile" class="flex items-center space-x-3 px-4 py-3 rounded-lg text-gray-600 hover:bg-gray-50 transition duration-150">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                        </svg>
                        <span>Profile</span>
                    </a>
                </nav>

                <!-- Bottom Section with Sign Out -->
                <section class="p-4 border-t">
                    <button onclick="alert('Sign out clicked')" class="flex items-center space-x-3 px-4 py-3 rounded-lg text-gray-600 hover:bg-gray-50 transition duration-150 w-full">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1" />
                        </svg>
                        <span>Sign Out</span>
                    </button>
                </section>
            </section>
        </section>

        <!-- Mobile Overlay -->
        <section id="sidebar-overlay" class="fixed inset-0 bg-gray-800 bg-opacity-50 z-20 hidden md:hidden" onclick="toggleSidebar()"></section>

        <!-- Main Content -->
        <section class="flex-1 flex flex-col md:pl-64">
            <!-- Top Navigation Bar -->
            <header class="bg-white shadow-sm h-16 fixed w-full md:w-[calc(100%-16rem)] z-10">
                <section class="px-4 h-full flex items-center justify-between">
                    <!-- Hamburger Menu Button (Mobile Only) -->
                    <button onclick="toggleSidebar()" class="p-2 rounded-lg hover:bg-gray-100 md:hidden">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
                        </svg>
                    </button>

                    <!-- Profile Menu -->
                    <section class="flex items-center space-x-4">
                        <span class="text-sm text-gray-600">Boitumelo</span>
                        <button class="h-8 w-8 rounded-full bg-primary-100 flex items-center justify-center text-primary-600 font-medium">
                            B
                        </button>
                    </section>
                </section>
            </header>

            <!-- Main Content Area -->
            <main class="flex-1 overflow-y-auto pt-16">
                <section class="p-6 md:p-8">
                    <!-- Header Section -->
                    <header class="mb-8 glass-effect rounded-2xl p-6 shadow-lg">
                        <section class="flex flex-col md:flex-row justify-between items-center space-y-4 md:space-y-0">
                            <section class="flex items-center space-x-3">
                                <section class="h-10 w-10 bg-primary-500 rounded-lg flex items-center justify-center">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2 2v2m4 6h.01M5 20h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                                    </svg>
                                </section>
                                <h1 class="text-2xl font-bold text-gray-800">Available Jobs</h1>
                            </section>
                            <section class="flex items-center space-x-4">
                                <button class="bg-primary-500 hover:bg-primary-600 text-white px-4 py-2 rounded-lg transition duration-200 ease-in-out transform hover:scale-105">
                                    Post a Job
                                </button>
                            </section>
                        </section>
                    </header>

                    <!-- Search and Filter Section -->
                    <section class="mb-8 glass-effect rounded-2xl p-6 shadow-lg">
                        <section class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <!-- Search -->
                            <section class="relative">
                                <input type="text" id="jobSearch" placeholder="Search jobs..." class="w-full px-4 py-3 pl-12 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400 absolute left-4 top-3.5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                                </svg>
                            </section>
                            
                            <!-- Filters -->
                            <section class="flex flex-wrap gap-3">
                                <select id="categoryFilter" class="px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent text-sm">
                                    <option value="">All Categories</option>
                                    <option value="web-development">Web Development</option>
                                    <option value="design">Design</option>
                                    <option value="writing">Writing</option>
                                    <option value="marketing">Marketing</option>
                                </select>
                                <select id="budgetFilter" class="px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent text-sm">
                                    <option value="">Any Budget</option>
                                    <option value="0-1000">Under R1000</option>
                                    <option value="1000-5000">R1000 - R5000</option>
                                    <option value="5000+">R5000+</option>
                                </select>
                                <button id="applyFilters" class="bg-primary-500 hover:bg-primary-600 text-white px-4 py-2 rounded-lg text-sm transition duration-200">
                                    Apply Filters
                                </button>
                            </section>
                        </section>
                    </section>

                    <!-- Jobs List Section -->
                    <section class="glass-effect rounded-2xl shadow-lg overflow-hidden">
                        <section class="p-6 border-b border-gray-100">
                            <h2 class="text-xl font-semibold text-gray-800">Job Listings</h2>
                        </section>
                        
                        <!-- Loading State -->
                        <section id="loadingState" class="p-8 text-center">
                            <section class="flex items-center justify-center space-x-3">
                                <svg class="animate-spin h-5 w-5 text-primary-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                    <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                    <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                                </svg>
                                <span class="text-sm text-gray-500">Loading jobs...</span>
                            </section>
                        </section>

                        <!-- Empty State -->
                        <section id="emptyState" class="hidden p-8 text-center">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 mx-auto text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                            </svg>
                            <h3 class="mt-2 text-lg font-medium text-gray-700">No jobs found</h3>
                            <p class="mt-1 text-gray-500">Try adjusting your search or filter criteria</p>
                        </section>

                        <!-- Jobs List (will be populated dynamically) -->
                        <section id="jobsList" class="hidden divide-y divide-gray-100">
                            <!-- Job items will be inserted here by JavaScript -->
                        </section>

                        <!-- Pagination -->
                        <section id="pagination" class="hidden p-4 border-t border-gray-100 flex justify-between items-center">
                            <button id="prevPage" class="px-4 py-2 rounded-md border border-gray-300 bg-white text-gray-700 hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed">
                                Previous
                            </button>
                            <span id="pageInfo" class="text-sm text-gray-500">Page 1 of 5</span>
                            <button id="nextPage" class="px-4 py-2 rounded-md border border-gray-300 bg-white text-gray-700 hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed">
                                Next
                            </button>
                        </section>
                    </section>
                </section>
            </main>
        </section>
    </section>

    <!-- Job Item Template (used by JavaScript) -->
    <template id="jobTemplate">
        <section class="p-6 hover:bg-gray-50 transition duration-150">
            <section class="flex flex-col md:flex-row md:items-center justify-between gap-4">
                <section class="space-y-2">
                    <h3 class="text-lg font-semibold text-gray-800 job-title">Job Title</h3>
                    <section class="flex flex-wrap gap-2">
                        <span class="px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-xs font-medium job-category">Category</span>
                        <span class="px-3 py-1 bg-green-100 text-green-800 rounded-full text-xs font-medium job-budget">Budget</span>
                        <span class="px-3 py-1 bg-purple-100 text-purple-800 rounded-full text-xs font-medium job-duration">Duration</span>
                    </section>
                    <p class="text-gray-600 mt-2 job-description">Job description will appear here...</p>
                    <section class="flex items-center space-x-2 mt-2">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                        </svg>
                        <span class="text-xs text-gray-500 job-location">Location</span>
                        <span class="text-xs text-gray-400">•</span>
                        <span class="text-xs text-gray-500 job-posted">Posted 3 days ago</span>
                    </section>
                </section>
                <button class="bg-primary-500 hover:bg-primary-600 text-white px-4 py-2 rounded-lg transition duration-200 whitespace-nowrap apply-btn">
                    Apply Now
                </button>
            </section>
        </section>
    </template>

    <script>
        const url = 'https://lance-api-ftcehba3hhheg9hu.southafricanorth-01.azurewebsites.net'; //await

 async function createJob(jobData) {
    const res = await fetch(`${url}/jobs`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(jobData)
    });
  
    if (!res.ok) {
      const errorText = await res.text();
      throw new Error(`Failed to create job: ${errorText}`);
    }
  
    return await res.json();
  }
  
 async function getJobs() {
    const res = await fetch(`${url}/jobs`);
    if (!res.ok) throw new Error('Failed to fetch jobs');
    return await res.json();
  }



 async function updateStatus(info){
    const res = await fetch(`${url}/jobs/updateStatus`,{
      method : 'POST',
      headers: {'Content-Type' : 'application/json'},
      body: JSON.stringify(info)

    });
    if(!res.ok){
      const errorText = await res.text();
      throw new Error(`Failed to update job status: ${errorText}`);
    }
    return await res.json();
  }

 // Function to fetch jobs from the server
 async function fetchJobs(page = 1, filters = {}) {
    try {
        document.getElementById('loadingState').classList.remove('hidden');
        document.getElementById('jobsList').classList.add('hidden');
        document.getElementById('emptyState').classList.add('hidden');
        document.getElementById('pagination').classList.add('hidden');

        const jobs = await getJobs(); // jobs is an array
        console.log("Fetched jobs:", jobs); // for debugging

        renderJobs(jobs);

        if (jobs.length === 0) {
            document.getElementById('emptyState').classList.remove('hidden');
        } else {
            document.getElementById('jobsList').classList.remove('hidden');
        }

    } catch (error) {
        console.error('Error fetching jobs:', error);
        document.getElementById('emptyState').classList.remove('hidden');
        document.getElementById('emptyState').querySelector('h3').textContent = "Error loading jobs";
        document.getElementById('emptyState').querySelector('p').textContent = "Please try again later";
    } finally {
        document.getElementById('loadingState').classList.add('hidden');
    }
}


// Function to render jobs
function renderJobs(jobs) {
    const jobsList = document.getElementById('jobsList');
    const template = document.getElementById('jobTemplate');
    
    // Clear existing jobs
    jobsList.innerHTML = '';
    
    // Add each job to the list
    jobs.forEach(job => {
        const clone = template.content.cloneNode(true);
        
        // Fill in the job data
        clone.querySelector('.job-title').textContent = job.jobTitle;
        clone.querySelector('.job-category').textContent = job.category.replace('-', ' ');//====
        clone.querySelector('.job-budget').textContent = job.wage;
        clone.querySelector('.job-duration').textContent = job.duration;
        clone.querySelector('.job-description').textContent = job.description;
        clone.querySelector('.job-location').textContent = job.location;//========
        clone.querySelector('.job-posted').textContent = `Posted ${formatDate(job.createdAt)}`;
        
        // Add click handler for apply button
        clone.querySelector('.apply-btn').addEventListener('click', () => {
            applyForJob(job.jobId);
        });
        
        jobsList.appendChild(clone);
    });
}
async function debug(){
    const jobs = await getJobs();
    console.log(jobs);
}
// Helper function to format date
function formatDate(dateString) {
    const date = new Date(dateString);
    const now = new Date();
    const diffInDays = Math.floor((now - date) / (1000 * 60 * 60 * 24));
    
    if (diffInDays === 0) return "today";
    if (diffInDays === 1) return "yesterday";
    return `${diffInDays} days ago`;
}

// Function to update pagination
function updatePagination(currentPage, totalPages) {
    document.getElementById('pageInfo').textContent = `Page ${currentPage} of ${totalPages}`;
    
    const prevButton = document.getElementById('prevPage');
    const nextButton = document.getElementById('nextPage');
    
    prevButton.disabled = currentPage <= 1;
    nextButton.disabled = currentPage >= totalPages;
    
    // Update click handlers
    prevButton.onclick = () => {
        if (currentPage > 1) {
            fetchJobs(currentPage - 1, getCurrentFilters());
        }
    };
    
    nextButton.onclick = () => {
        if (currentPage < totalPages) {
            fetchJobs(currentPage + 1, getCurrentFilters());
        }
    };
}

// Function to get current filter values
function getCurrentFilters() {
    return {
        search: document.getElementById('jobSearch').value,
        category: document.getElementById('categoryFilter').value,
        budget: document.getElementById('budgetFilter').value
    };
}

// Function to handle job application
// Should change to Job Details instead
function applyForJob(jobId) {
setTimeout(() => {
window.location.href = `/jobdetails?jobId=${jobId}`;
}, 300);
}

// Initialize the page
document.addEventListener('DOMContentLoaded', () => {
    // Initial fetch
    fetchJobs();
    
    // Set up filter button
    document.getElementById('applyFilters').addEventListener('click', () => {
        fetchJobs(1, getCurrentFilters());
    });
    
    // Set up search input (debounced)
    let searchTimeout;
    document.getElementById('jobSearch').addEventListener('input', () => {
        clearTimeout(searchTimeout);
        searchTimeout = setTimeout(() => {
            fetchJobs(1, getCurrentFilters());
        }, 500);
    });
    
    // Set up sidebar toggle (if needed)
    window.toggleSidebar = function() {
        const sidebar = document.getElementById('sidebar');
        const overlay = document.getElementById('sidebar-overlay');
        
        if (sidebar.classList.contains('-translate-x-full')) {
            sidebar.classList.remove('-translate-x-full');
            overlay.classList.remove('hidden');
        } else {
            sidebar.classList.add('-translate-x-full');
            overlay.classList.add('hidden');
        }
    };
});
    </script>
</body>
</html>