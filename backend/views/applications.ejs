<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Job Applications</title>
    
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    fontFamily: {
                        sans: ['Inter', 'sans-serif'],
                    },
                    colors: {
                        primary: {
                            50: '#f0f9ff',
                            100: '#e0f2fe',
                            500: '#0ea5e9',
                            600: '#0284c7',
                        }
                    }
                }
            }
        }
    </script>

    <style>
        .glass-effect {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
        }
    </style>
</head>
<body class="min-h-screen bg-gradient-to-br from-gray-50 to-primary-50 font-sans">
    <section class="flex h-screen overflow-hidden">
        <!-- Sidebar (Same as client dashboard) -->
        <!-- ... Your existing sidebar code ... -->

        <!-- Main Content -->
        <section class="flex-1 flex flex-col md:pl-64">
            <!-- Main Content Area -->
            <main class="flex-1 overflow-y-auto pt-16">
                <section class="p-6 md:p-8">
                    <!-- Back Button and Job Info -->
                    <section class="mb-6">
                        <button onclick="history.back()" class="inline-flex items-center space-x-2 text-gray-600 hover:text-gray-800 mb-4">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
                            </svg>
                            <span>Back to Jobs</span>
                        </button>

                        <!-- Job Details Card -->
                        <section class="glass-effect rounded-2xl p-6 shadow-lg mb-6">
                            <section class="flex flex-col md:flex-row justify-between items-start md:items-center">
                                <section>
                                    <h1 class="text-2xl font-bold text-gray-800" id="jobTitle">Loading...</h1>
                                    <p class="text-gray-500" id="jobDescription">Loading...</p>
                                </section>
                                <section class="mt-4 md:mt-0">
                                    <span class="px-4 py-2 rounded-full text-sm font-medium bg-primary-100 text-primary-600" id="applicationsCount">
                                        ... Applications
                                    </span>
                                </section>
                            </section>
                        </section>
                    </section>

                    <!-- Filters -->
                    <section class="flex flex-wrap gap-4 mb-6">
                        <section class="relative">
                            <select class="appearance-none bg-white border rounded-lg px-4 py-2 pr-8 focus:outline-none focus:ring-2 focus:ring-primary-500">
                                <option>All Status</option>
                                <option>Shortlisted</option>
                                <option>Pending</option>
                                <option>Rejected</option>
                            </select>
                            <section class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700">
                                <svg class="fill-current h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20">
                                    <path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z"/>
                                </svg>
                            </section>
                        </section>

                        <section class="relative flex-1 md:max-w-xs">
                            <input type="text" 
                                   placeholder="Search applicants..." 
                                   class="w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500">
                            <svg xmlns="http://www.w3.org/2000/svg" 
                                 class="h-5 w-5 text-gray-400 absolute right-3 top-2.5" 
                                 fill="none" 
                                 viewBox="0 0 24 24" 
                                 stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                            </svg>
                        </section>
                    </section>

                    <!-- Applicants Grid -->
                    <section class="grid grid-cols-1 md:grid-cols-2 gap-6" id="applicantsContainer">
                        <!-- Loading State -->
                        <section class="animate-pulse">
                            <section class="h-48 bg-gray-200 rounded-lg"></section>
                        </section>
                        <section class="animate-pulse">
                            <section class="h-48 bg-gray-200 rounded-lg"></section>
                        </section>
                    </section>
                </section>
            </main>
        </section>
    </section>

    <!-- Applicant Card Template -->
    <template id="applicantCardTemplate">
        <section class="glass-effect rounded-2xl p-6 shadow-lg hover:shadow-xl transition-shadow">
            <section class="flex items-start justify-between mb-4">
                <section class="flex items-center space-x-4">
                    <section class="h-12 w-12 rounded-full bg-primary-100 flex items-center justify-center text-primary-600 font-medium applicant-initials">
                        JS
                    </section>
                    <section>
                        <h3 class="font-semibold text-gray-800 applicant-name">Loading...</h3>
                        <p class="text-sm text-gray-500 applicant-title">Loading...</p>
                    </section>
                </section>
                <section class="applicant-status"></section>
            </section>

            <section class="space-y-4">
                <section class="flex items-center space-x-2 text-sm text-gray-600">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2 2v2m4 6h.01M5 20h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                    </svg>
                    <span class="applicant-experience">Loading...</span>
                </section>

                <section class="flex items-center space-x-2 text-sm text-gray-600">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2zm7-5a2 2 0 11-4 0 2 2 0 014 0z" />
                    </svg>
                    <span class="applicant-rate">Loading...</span>
                </section>

                <section class="flex flex-wrap gap-2 applicant-skills"></section>

                <section class="flex items-center justify-between pt-4 border-t border-gray-100">
                    <button class="text-primary-600 hover:text-primary-700 font-medium view-profile-btn">
                        View Profile
                    </button>
                    <section class="flex space-x-2">
                        <button class="px-3 py-1 rounded-lg border border-gray-300 hover:bg-gray-50 shortlist-btn">
                            Shortlist
                        </button>
                        <button class="px-3 py-1 rounded-lg bg-primary-500 text-white hover:bg-primary-600 hire-btn">
                            Hire
                        </button>
                    </section>
                </section>
            </section>
        </section>
    </template>

    <script>
        // Get job ID from URL
        const urlParams = new URLSearchParams(window.location.search);
        const jobId = urlParams.get('jobId');

        // Fetch and display job details and applications
        async function fetchAndDisplayApplications() {
            try {
                // Replace with your API endpoint
                // const response = await fetch(`/api/jobs/${jobId}/applications`);
                const data = [{
                    id: 3,
                    jobTitle: "SEO Optimization",
                    description: "Improve website ranking and visibility",
                    applicationsCount: "Counting",//ASK DB GUYS FOR THIS
                    name: "George",
                    title: "Buff Coder",
                    experience: "2 years",
                    rate: 300,
                    status: "TESTING"
                }];

                

                // Clear loading state
                const applicantsContainer = document.getElementById('applicantsContainer');
                applicantsContainer.innerHTML = '';

                // Create applicant cards
                data.forEach(applicant => {

                    // Update job details
                    document.getElementById('jobTitle').textContent = applicant.title;
                    document.getElementById('jobDescription').textContent = applicant.description;
                    document.getElementById('applicationsCount').textContent = `${applicant.applicationsCount} Applications`;

                    const template = document.getElementById('applicantCardTemplate');
                    const clone = template.content.cloneNode(true);

                    // Populate applicant data
                    clone.querySelector('.applicant-name').textContent = applicant.name;
                    clone.querySelector('.applicant-title').textContent = applicant.title;
                    clone.querySelector('.applicant-initials').textContent = getInitials(applicant.name);
                    clone.querySelector('.applicant-experience').textContent = applicant.experience;
                    clone.querySelector('.applicant-rate').textContent = `R${applicant.rate}/hr`;

                    // Set status
                    const statusElement = clone.querySelector('.applicant-status');
                    statusElement.className = `px-3 py-1 rounded-full text-sm ${getStatusClass(applicant.status)}`;
                    statusElement.textContent = applicant.status;

                    // Add event listeners
                    clone.querySelector('.view-profile-btn').onclick = () => viewProfile(applicant.id);
                    clone.querySelector('.shortlist-btn').onclick = () => shortlistApplicant(applicant.id);
                    clone.querySelector('.hire-btn').onclick = () => hireApplicant(applicant.id);

                    applicantsContainer.appendChild(clone);
                });
            } catch (error) {
                console.error('Error fetching applications:', error);
                // Handle error state
            }
        }

        // Helper Functions
        function getInitials(name) {
            return name.split(' ').map(n => n[0]).join('').toUpperCase();
        }

        function getStatusClass(status) {
            const classes = {
                'Shortlisted': 'bg-yellow-100 text-yellow-600',
                'Hired': 'bg-green-100 text-green-600',
                'Pending': 'bg-gray-100 text-gray-600',
                'Rejected': 'bg-red-100 text-red-600'
            };
            return classes[status] || classes['Pending'];
        }

        // Action Functions
        function viewProfile(applicantId) {
            window.location.href = `/freelancer-profile.html?id=${applicantId}`;
        }

        async function shortlistApplicant(applicantId) {
            try {
                // Replace with your API endpoint
                await fetch(`/api/applications/${applicantId}/shortlist`, {
                    method: 'POST'
                });
                // Refresh applications
                fetchAndDisplayApplications();
            } catch (error) {
                console.error('Error shortlisting applicant:', error);
            }
        }

        async function hireApplicant(applicantId) {
            try {
                // Replace with your API endpoint
                await fetch(`/api/applications/${applicantId}/hire`, {
                    method: 'POST'
                });
                // Refresh applications
                fetchAndDisplayApplications();
            } catch (error) {
                console.error('Error hiring applicant:', error);
            }
        }

        // Initialize
        document.addEventListener('DOMContentLoaded', fetchAndDisplayApplications);
    </script>
</body>
</html>